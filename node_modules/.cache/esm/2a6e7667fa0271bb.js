let express,registerSchema,LoginSchema,userController,auth,newEmployeeController;_fa0‍.x([["default",()=>_fa0‍.o]]);_fa0‍.w("express",[["default",["express"],function(v){express=v}]]);_fa0‍.w("../controllers/Auth/registerController",[["default",["registerSchema"],function(v){registerSchema=v}]]);_fa0‍.w("../controllers/Auth/loginController",[["default",["LoginSchema"],function(v){LoginSchema=v}]]);_fa0‍.w("../controllers/Auth/userController",[["default",["userController"],function(v){userController=v}]]);_fa0‍.w("../middlewares/auth",[["default",["auth"],function(v){auth=v}]]);_fa0‍.w("../controllers/Forms/newEmployeeController",[["default",["newEmployeeController"],function(v){newEmployeeController=v}]]);









const Route = express.Router()
//-------------------Auth Routh-----------------------------------------
Route.post('/register',registerSchema.register)
Route.post('/login',LoginSchema.login)
Route.get('/me',  auth, userController.me)

//------------------ Forms---------------------
Route.get('/allEmployee/',newEmployeeController.allEmployee)
Route.post('/newEmployee', auth,newEmployeeController.newemployee)
Route.put('/updateEmployee/:id', auth,newEmployeeController.updateEmployee)
Route.delete('/deleteEmployee/:id', auth,newEmployeeController.deleteEmployee)






_fa0‍.d(Route);